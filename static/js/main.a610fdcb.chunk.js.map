{"version":3,"sources":["components/input/input.js","components/spinner/spinner.js","components/navio/Navio.js","App.js","index.js"],"names":["Main","props","useState","urlInput","setUrlInput","className","placeholder","value","onChange","e","target","onClick","setUrl","Navio","navioRef","useRef","fetchData","useCallback","a","timeoutP","Promise","resolve","setTimeout","finish","totalData","curOffset","fetch","url","json","data","console","log","length","concat","setData","useEffect","then","response","nv","navio","current","addAllAttribs","ref","delete","App","urls","setUrls","findNextId","maxId","forEach","element","id","map","item","index","key","urlsTemp","splice","deleteNavio","setDataView","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a610fdcb.chunk.js","sourcesContent":["import \"./input.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction Main(props) {\r\n  const [urlInput, setUrlInput] = useState(\"\");\r\n\r\n  const setUrl=()=>{\r\n    props.setUrl(urlInput);\r\n    setUrlInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"input\">\r\n      <input className=\"input__input\" placeholder=\"Introduce URL\" value={urlInput} onChange={e=> setUrlInput(e.target.value)}></input>\r\n      <button className=\"input__button\" onClick={setUrl}>Mostrar datos</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nMain.propTypes = {\r\n  urls: PropTypes.any,\r\n  setUrl: PropTypes.any\r\n};\r\n\r\nexport default Main;","import \"./spinner.css\";\r\nimport React from \"react\";\r\n\r\nfunction Main() {\r\n  return (\r\n    <div className=\"input\">\r\n      <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n      <h3>Cargando</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Main;","import \"./navio.css\";\r\nimport React, { useRef, useEffect, useCallback } from \"react\";\r\nimport navio from \"navio\";\r\nimport Spinner from \"../spinner/spinner\";\r\nimport PropTypes from \"prop-types\";\r\nfunction Navio(props) {\r\n  const navioRef = useRef(null);\r\n  const fetchData = useCallback(async () => {\r\n    const timeoutP = async () => {\r\n      return new Promise((resolve) => {\r\n        setTimeout(resolve(), 100);\r\n      });\r\n    };\r\n    let finish = false;\r\n    let totalData = [];\r\n    let curOffset = 0;\r\n    while (!finish) {\r\n      const data = await ((await fetch(props.url + \"?$limit=100&$offset=\" + curOffset)).json());\r\n      console.log(\"hola\", data);\r\n      curOffset += 100;\r\n      if (data.length === 0) finish = true;\r\n      else {\r\n        totalData = totalData.concat(data);\r\n        await timeoutP();\r\n      }\r\n    }\r\n    console.log(\"b\",totalData);\r\n    return totalData;\r\n  }, [props.url]);\r\n\r\n  const setData = props.setData;\r\n\r\n  useEffect(() => {\r\n    if (props.data.length===0) {\r\n      fetchData().then((response) => {\r\n        console.log(\"hola2\");\r\n        setData(response);\r\n      });\r\n    }\r\n    else {\r\n      console.log(props.data);\r\n      const nv = navio(navioRef.current);\r\n      nv.data(props.data);\r\n      nv.addAllAttribs();\r\n    }\r\n\r\n  }, [props.url, setData, fetchData, props.data]);\r\n  return props.data.length>0 ? (<div className=\"navio\">\r\n    <h2>Mostrando navio de: {props.url}</h2>\r\n    <div ref={navioRef}></div>\r\n    <div className=\"button__container\">\r\n      <button onClick={() => props.delete()} className=\"navioButton\">Borrar</button>\r\n    </div></div>)\r\n    : <Spinner ></Spinner>;\r\n}\r\n\r\nNavio.propTypes = {\r\n  setUrl: PropTypes.any,\r\n  delete: PropTypes.any,\r\n  url: PropTypes.any,\r\n  setData: PropTypes.any,\r\n  data: PropTypes.any\r\n};\r\nexport default Navio;","import \"./App.css\";\r\nimport React, { useState } from \"react\";\r\nimport Input from \"./components/input/input\";\r\nimport Navio from \"./components/navio/Navio\";\r\nfunction App() {\r\n  const [urls, setUrls] = useState([]);\r\n\r\n  const setUrl = (urlInput) => {\r\n    if (!urlInput) return;\r\n    const urlsTemp = [...urls];\r\n    urlsTemp.push({ id: findNextId(), url: urlInput, data: [] });\r\n    setUrls(urlsTemp);\r\n  };\r\n\r\n  const findNextId = () => {\r\n    let maxId = 0;\r\n    urls.forEach(element => {\r\n      if (element.id > maxId) maxId = element.id;\r\n    });\r\n    return maxId + 1;\r\n  };\r\n\r\n  const deleteNavio = (index) => {\r\n    const urlsTemp = [...urls];\r\n    urlsTemp.splice(index, 1);\r\n    setUrls(urlsTemp);\r\n  };\r\n\r\n  const setDataView = (index, data) => {\r\n    const urlsTemp = [...urls];\r\n    urlsTemp[index].data = data;\r\n    setUrls(urlsTemp);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <h1>Mostrando datos de navio</h1>\r\n      {urls.length > 0 ? <h2>Número de navios mostrandose: {urls.length}</h2> : null}\r\n      {\r\n        urls.map((item, index) => {\r\n          return <Navio url={item.url} key={item.id} delete={()=> deleteNavio(index)} setData={e => setDataView(index, e)} data={item.data}></Navio>;\r\n        })\r\n      }\r\n      <Input urls={urls} setUrl={setUrl}></Input>\r\n\r\n      <p>Créditos del spinner a https://loading.io/css/</p>\r\n    </div>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}